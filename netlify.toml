# Enable broken link checking in Netlify CI
[[plugins]]
package = "/node_modules/netlify-plugin-checklinks"
    [plugins.inputs]
    entryPoints = [
        "*.html",
    ]

    recursive = true
    pretty = true
    checkExternal = true
    redirects = "todo"
    followSourceMaps = false
    # Wikipedia, forum.ubuntu.com, docs.rs, and blog.holochain.org really don't
    # like too many concurrent requests from the same client.
    concurrency = 2

    skipPatterns = [
        # Sometimes the checklinks plugin fails to get a positive result for
        # Google Web Fonts links, even though they work just fine.
        "https://fonts.googleapis.com/css2?family=Mulish:ital,wght@0,400;0,700;1,400;1,700&display=swap",
        # For some reason the fragment check doesn't work on Matrix community
        # shortlinks.
        "https://matrix.to/#/#community:nixos.org",
        # Reddit seems to deny access to the plugin.
        "https://reddit.com/r/holochain/",
        "https://www.reddit.com/r/holochain/",
        # For some reason the plugin recognises these filenames as URLs,
        # but only on one page (page 2 of the getting started guide, in the
        # table that contains the project structure).
        "http://lib.rs",
        "http://README.md",
        # In spite of us trying to turn off source map checking, it still fails
        # on broken source maps file: URLs.
        "file:///",
        # Leetcode doesn't like our bot.
        "https://leetcode.com/problemset/",
    ]

    # We still want to check these.
    skipFragmentPatterns = [
        # Fragment IDs for line numbers on docs.rs are handled by JS, not HTML.
        "`https://docs\\.rs/.+#\\d+(-\\d+)?`",
        # Same with GitHub.
        "`https://github\\.com/.+#L\\d+(-\\d+)?`",
    ]

    todoPatterns = [
        # Don't know why these don't appear, and maybe they should.
        "_site/pagefind",
        # NPM now blocks bots.
        # https://github.com/orgs/community/discussions/174098#discussioncomment-14461226
        "https://www.npmjs.com",
    ]

    todoServerErrorPatterns = [
        "https://doc.libsodium.org",
    ]

[[headers]]
  for = "/*"
  [headers.values]
    Access-Control-Allow-Origin = "*"

# These first rules are a bit fiddly -- we explicitly redirect URLs that we know should
# point to the Redux docs, rather than redirecting to `/`, then to `/redirect-to-redux-site.html`,
# which ends up breaking things on the Redux site side.
[[redirects]]
    from = "/docs/guide/*"
    to = "/redirect-to-redux-site.html#!docs/guide/:splat"
    # We may use this path for a new guidebook.
    status = 302

[[redirects]]
    from = "/docs/tutorials/*"
    to = "/redirect-to-redux-site.html#!docs/tutorials/:splat"
    # Holding open the possibility of tutorials too.
    status = 302

[[redirects]]
    from = "/docs/create-new-app/"
    to = "/redirect-to-redux-site.html#!docs/create-new-app/"
    status = 302

[[redirects]]
    from = "/resources/happ-bundle/"
    to = "/redirect-to-redux-site.html#!docs/resources/happ-bundle/"
    # There will eventually be a new hApp bundle format that will get documented,
    # and I intend to put it under `/resources`.
    status = 302

# Some of the core concepts' titles and URLs have changed,
# but fortunately they map to new core concepts (sometimes roughly, sometimes exactly)
# so let's redirect them.
[[redirects]]
    from = "/docs/concepts/3_private_data/"
    to = "/concepts/3_source_chain/"
    status = 301

[[redirects]]
    from = "/docs/concepts/4_public_data_on_the_dht/"
    to = "/concepts/4_dht/"
    status = 301

[[redirects]]
    from = "/docs/concepts/5_linking_data_together/"
    to = "/concepts/5_links_anchors/"
    status = 301

[[redirects]]
    from = "/docs/concepts/6_modifying_and_deleting_data/"
    to = "/concepts/6_crud_actions/"
    status = 301

[[redirects]]
    from = "/docs/concepts/8_node_to_node_messaging/"
    to = "/concepts/8_calls_capabilities/"
    status = 301

[[redirects]]
    from = "/references/*"
    to = "/resources/:splat"
    status = 301

# Once upon a time, we had a landing page and all the actual docs were in /docs.
[[redirects]]
    from = "/docs/*"
    to = "/:splat"
    status = 301

# Super old install URL; used to be incorrectly linked from the blog's CTAs.
[[redirects]]
    from = "/start.html"
    to = "/quick-start/"
    status = 301

# This is just for the nix guide, which is now called the advanced install guide.
[[redirects]]
    from = "/docs/nix/"
    to = "/install-advanced/"
    status = 301

# The rrDHT paper got finalised, so let's redirect to the final copy.
[[redirects]]
    from = "/assets/files/RRDHT-draft-Nov-2019.pdf"
    to = "/assets/files/RRDHT-whitepaper-final.pdf"
    status = 301

# The quick start guide used to live at /install/
[[redirects]]
    from = "/install/"
    to = "/get-started/"
    status = 301

# Glossary has been moved to the resources path.
[[redirects]]
    from = "/glossary/"
    to = "/resources/glossary/"
    status = 301

# The front page for the core concepts has been removed.
[[redirects]]
    from = "/concepts/"
    to = "/concepts/1_the_basics/"
    # Keeping this as a 302 in case we decide we want a front page again.
    status = 302

# Shuffled some things around August 2023
[[redirects]]
    from = "/get-building/*"
    to = "/get-started/:splat"
    status = 301

[[redirects]]
    from = "/quick-start/"
    to = "/get-started/"
    status = 301

# The first upgrade guide lived under getting started. It has been moved to its own area.
[[redirects]]
    from = "/get-started/upgrade-holochain/"
    to = "/resources/upgrade/"
    status = 301

# Every time there's a new breaking release that achieves 'recommended' status,
# update this temporary redirect. /resources/upgrade/latest/ isn't in the site nav,
# but it is a handy URL we can hand out without needing to look up what the proper URL is.
# TODO(upgrade): change following version number
[[redirects]]
    from = "/resources/upgrade/latest/"
    to = "/resources/upgrade/upgrade-holochain-0.5/"
    status = 302