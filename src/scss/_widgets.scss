/* Code Fence styling */

.copy-to-clipboard-wrapper {
  position: relative;

  button.copy-to-clipboard {
    position: absolute;
    right: 5px;
    top: 5px;
    display: block;
    margin-left: auto;
    padding: 6px;
    border-radius: 0.5em;
    border: none;

    &:hover {
      cursor: pointer;
      background-color: lighten($color: $cl-gray, $amount: 20);
    }

    &:active {
      background: $cl-gray;
    }
  }
}

pre.hljs-container {
  display: flex;
  align-items: flex-start;
  overflow: auto;
  border-radius: .3em;
}

pre.hljs-container, code {
  background-color: rgba($cl-gray, 50%);
}

.diff-container pre.hljs-container {
  margin: 0;
}

code.hljs {
  /* Override highlight.js' default background colour, so we can control it here.
  It's too light to work well on white. */
  background-color: transparent;
}

/* Begin each terminal command with a non-copyable terminal prompt. */
code.language-shell {
  &::before {
    /* This green was copied from highlight.js' atom-one CSS to keep consistent with it.
    FIXME: If we ever change the code highlighting theme, this will look odd. */
    color: #50a14f;
    content: '$ ';
  }
}

.hljs-addition, .hljs-deletion {
  color: unset;
  border-radius: 0.25em;
  border: 1px solid;
}

.hljs-addition {
  /* This is copied from the foreground colour of additions for the hljs theme we're using. */
  border-color: #50a14f;
  background-color: rgba(#50a14f, 0.1);
}

.hljs-deletion {
  border-color: #e45649;
  background-color: rgba(#e45649, 0.1);
}

.diff-tab-strip {
  margin-left: 0.5em;
}

.diff-show-diff, .diff-show-final {
  border-radius: 0.25em 0.25em 0 0;
  font: inherit;
  border: darken($cl-gray, 10%) solid 1px;
  background: lighten($cl-gray, 10%);
  border-bottom: none;
  padding: 0 0.5em;
  cursor: pointer;
}

.diff-tab {
  display: none;
}

.diff-container {
  &[data-selected=diff] .diff-show-diff, &[data-selected=final] .diff-show-final {
    border-color: darken($cl-other-green, 30%);
    background: lighten($cl-other-green, 10%);
  }

  &[data-selected=diff] .diff-tab-diff, &[data-selected=final] .diff-tab-final {
    display: block;
  }
}

/* Inline input and output */
code, kbd {
	padding: .1em .35em;
	border-radius: .4em;
	white-space: break-spaces;
  box-sizing: border-box;
  font-size: 90%;
}

kbd {
  background-color: rgba($cl-main-text, 0.75);
  color: white;
}

/* Offset the styling of combo keys from their combinator (e.g., the '+' in 'Ctrl+C'). */
/* Doesn't work on all browsers, but makes for slightly nicer typesetting for the browsers that do support it. */
kbd:has(kbd), kbd kbd {
  background-color: rgba($cl-main-text, 0.5);
}

kbd kbd {
  /* Nested kbds, as used in keystroke combos, need to not have their font size shrunk twice. */
  font-size: 100%;
}

kbd:has(kbd) {
  padding-left: 0;
  padding-right: 0;
}

/* Details and Summary */
details {
  /* For historical reasons this block's class name is different from the 'Learn more' text that it displays. */
  &.dig-deeper {
    outline: rgba(black, 0.25) solid 1px;
    background-color: #d0d0d745;
    border-radius: 5px;
    margin: 2em 0;

    summary {
      border-radius: 5px;
      padding: 10px 20px;
      position: relative;
      font-weight: bold;

      &::marker {
        display: none;
        content: '';
      }
      &::before {
        font-weight: normal;
        padding-left: 32px;
        background-image: $learnIcon;
        background-repeat: no-repeat;
        background-position-y: 2px;
        background-position-x: left;
        background-size: 21.5px;
        content: "Learn more | ";
        color: rgba(black, 0.5);
      }
      @include addExpandIcon;
    }

    .details-content {
      padding: 0 20px 10px;
    }

    &[open] {
      summary {
        border-radius: 5px 5px 0 0;

        &::after{
          transform: scaleY(-1);
          top: 4px;
        }
      }
    }
  }
}


/* Admonitions */
@mixin admonitionTitle($admonitionBg) {
  .admonition-title {
    background-color: $admonitionBg;
    padding: 6.4px 9.6px 6.4px 16px;
    border-bottom: .8px solid rgba(68,138,255,.1);
    margin-top: 0;
    font-weight: 700;
    @content;
  }
}

.admonition {
  outline: black solid 1px;
  margin: 2em 0;
  border-radius: 1.6px;
  overflow: auto;
  background-color: white;

  &-content {
    padding: 0 16px;

    > * {
      margin-top: 0;
    }

    > ol, > ul {
      ol, ul {
        padding-left: 20px;
      }
    }
  }

  &.tip {
    @include admonitionTitle(rgba(0, 191, 165, 0.1));
  }

  &.note {
    @include admonitionTitle(rgba($cl-other-green, 0.2)) {
      padding-top: 10px;
      display: flex;
      gap: 12px;
      align-items: flex-start;
      @include addPencilIcon();
    }
  }

  &.info {
    @include admonitionTitle(rgba($cl-other-green, 0.2)){
      padding-top: 10px;
      display: flex;
      gap: 12px;
      align-items: flex-start;
      border: none;
      @include addInfoIcon;
    }
  }

  &.learn {
    background-color: $cl-lightest-gray;
    border-radius: 5px;
    outline: none;

    @include admonitionTitle(transparent) {
      padding-top: 20px;
      padding-left: 20px;
      margin-bottom: 0;
      display: flex;
      gap: 12px;

      border: none;
      @include addLearnIcon;

      &::before {
        margin-top: 2px;
      }
    }

    .admonition-content {
      padding-left: 32px;
    }
  }

}

/* Card Stuff */

@mixin cardBase() {
  border-radius: 5px;
  box-shadow: 4px 4px 50px rgba(#000,.25);
  color: $cl-main-text;

  .content-wrapper {
    padding: 20px;

    h2 {
      font-size: $fs-bigger;
    }
  }
}

@mixin cardAddGradientTop($background, $head-space: 120px) {
  background: $background;

  .content-wrapper {
    background-color: white;
    clip-path: polygon(17% 0,100% 55%,100% 100%,0 100%,0 15%);
    margin-top: $head-space;

  }
}

@mixin hoverMove() {
  transform: translate(0);
  transition: transform .25s;

  &:hover {
    transform: translate(4px, -4px);
  }
}

a.link-tile {
  @include cardBase;
  @include hoverMove;

  &.blue-purple-top {
    @include cardAddGradientTop($blue-to-light-purple-grad);
  }

  &.blue-light-blue-top {
    @include cardAddGradientTop($blue-to-light-blue-grad);
  }
}

@mixin hamburgerMenu () {
  .hamburger-activate {
    cursor: pointer;
    display: none;

    &.opened {
      svg {
        rect {
          &:nth-of-type(1) {
            transform: rotate(45deg) translateY(0) translateX(0);
          }

          &:nth-of-type(2) {
            transform: rotate(405deg) translateY(0) translateX(0);
          }

          &:nth-of-type(3) {
            transform: rotate(-45deg) translateY(0) translateX(0);
          }
        }
      }
    }

    svg {
      height: 20px;

      rect {
        fill: $cl-header-bar-primary;
        transform: rotate(0) translateY(0) translateX(0);
        transition: transform 0.3s ease-in-out;

        &:nth-of-type(1) {
          transform-origin: 1em 2.75em;
        }

        &:nth-of-type(2) {
          transform-origin: 3.9em 4em;
        }

        &:nth-of-type(3) {
          transform-origin: 1em 4.75em;
        }
      }
    }

    @include mq-mobile {
      display: flex;
    }
  }
}

.modal-iframe {
  position: fixed;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: 1;
  background-color: rgba(#000,.25);

  &-close {
    position: absolute;
    right: calc(10vw - 55px);
    top: calc(10vh - 45px);
    background-color: white;
    padding: 10px;
    border-radius: 100px;
    height: 44px;
    cursor: pointer;
  }

  iframe {
    margin: 10vh 10vw;
    width: 80vw;
    height: 80vh;
  }
}

/* A special styling for lists of links to sub-pages. Used in the build guide. */
.topic-list {
  padding: 1em;
  background-color: #f7f7f7;

  /* Unless otherwise specified with `class="not-topic-page"`, links in a topic
  list are assumed to point to topic pages. */
  a:not(.not-topic-page, .header-anchor) {
    font-weight: bold;
    @include addPageIcon;
  }

  > :first-child {
    margin-top: 0;
  }

  > :last-child {
    margin-bottom: 0;
  }
}

/* Enlarged text with a rule on the left side, meant to call out an interesting
   paragran at the top of a page. */
.intro {
  font-size: $fs-even-bigger;
  border-left: 4px solid $cl-gray;
  padding-left: 1em;
  font-weight: 500;
  line-height: 1.55;
}

.orientation, .storystep {
  padding: 1.5em;
  margin: 1.5em 0;
  background: $cl-lightest-gray;

  > :first-child {
    margin-top: 0;
  }

  > :last-child {
    margin-bottom: 0;
  }
}

.storystep {
  /* Horizontal rules can be used to break up content in a story step.
  Make them nice and light. */
  hr {
    border: 1px solid $cl-gray;
    margin: 1.5em -1.5em;
  }
}